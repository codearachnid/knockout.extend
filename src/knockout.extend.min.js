/*!
 * knockout.extend.js v0.0.1
 * http://codearachnid.github.com/knockout.extend/
 *
 * Copyright 2014, Timothy Wood @codearachnid
 * Released under the GPLv3 License.
 */

ko.bindingHandlers.attrIf={update:function(a,b,c){var d=ko.utils.unwrapObservable(b()),e=ko.utils.unwrapObservable(d._if);if(e)ko.bindingHandlers.attr.update(a,b,c);else for(var f in d)d.hasOwnProperty(f)&&0!==f.indexOf("_")&&$(a).removeAttr(f)}},ko.observableArray.fn.distinct=function(a){var b=this;return b.index={},b.index[a]=ko.observable({}),ko.computed(function(){var c={};ko.utils.arrayForEach(b(),function(b){var d=ko.utils.unwrapObservable(b[a]);d&&(c[d]=c[d]||[],c[d].push(b))}),b.index[a](c)}),b},ko.observableArray.fn.pushAll=function(a){var b=this();return this.valueWillMutate(),ko.utils.arrayPushAll(b,a),this.valueHasMutated(),this},ko.observableArray.fn.pushAt=function(a,b){this.valueWillMutate(),this()[a]=b,this.valueHasMutated()},ko.observableArray.fn.totalVisible=function(){var a=this(),b=0;if("undefined"==typeof a||null===a||"undefined"==typeof a.length)return 0;for(var c=0,d=a.length;d>c;c++)a[c]._destroy!==!0&&b++;return b},ko.bindingHandlers.select2={init:function(a,b){$(a).select2(b()),ko.utils.domNodeDisposal.addDisposeCallback(a,function(){$(a).select2("destroy")})},update:function(a){$(a).trigger("change")}},ko.isBindingsApplied=function(a){return element="object"==typeof a?a:document.getElementById(a),!!ko.dataFor(element)};
